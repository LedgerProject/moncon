{"version":3,"sources":["Components/Indentity/Edit/style.js","Assets/svg/ArrowLeft.jsx","Components/Indentity/Edit/EditEmail.jsx"],"names":["focusedColor","useStyles","makeStyles","theme","root","fontFamily","fontStyle","boxSizing","margin","padding","background","position","color","borderBottomColor","borderColor","fontSize","field","return","display","textAlign","marginTop","cursor","marginLeft","buttonBlue","borderRadius","fontWeight","backgroundColor","boxShadow","link","lineHeight","proofSubtitle","paddingTop","title","input","width","ArrowLeft","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","EditEmail","classes","addToast","useToasts","useState","email","setEmail","history","useHistory","dispatchUserData","useDispatch","emailValue","useSelector","state","UserReducer","credential_email","value","handleClick","event","preventDefault","test","localStorage","hasOwnProperty","removeItem","type","payload","id","setTimeout","push","appearance","autoDismiss","autoDismissTimeout","console","log","useEffect","style","justifyContent","left","top","right","bottom","className","onClick","length","goBack","onSubmit","noValidate","autoComplete","onError","errors","InputProps","onChange","target","label","validators","errorMessages","variant"],"mappings":"2HAAA,+CACMA,EAAe,4BACRC,EAAYC,aAAW,SAACC,GAAD,MAAY,CAC9CC,KAAM,CACJC,WAAY,SACZC,UAAW,SACXC,UAAW,aACXC,OAAQ,IACRC,QAAS,EACTC,WAAY,UACZC,SAAU,WAEV,sBAAuB,CACrBC,MAAOZ,GAGT,8BAA+B,CAC7Ba,kBAAmBb,GAEpB,+BAAgC,CAC/Ba,kBAAmBb,GAErB,oCAAqC,CACnCa,kBAAmBb,GAGrB,2BAA4B,CAC1B,yBAA0B,CACxBc,YAAad,IAGjB,gBAAiB,CACfY,MAAO,6BAET,uBAAwB,CACtBA,MAAO,4BACPG,SAAU,WAGhBC,MAAO,CACH,wBAAwB,CACtBJ,MAAO,mBACbG,SAAU,qBAEL,sBAAuB,CACtBH,MAAOZ,GAGT,8BAA+B,CAC7Ba,kBAAmBb,GAEpB,+BAAgC,CAC/Ba,kBAAmBb,GAErB,oCAAqC,CACnCa,kBAAmBb,GAGrB,2BAA4B,CAC1B,yBAA0B,CACxBc,YAAad,IAGjB,gBAAiB,CACfY,MAAO,6BAET,uBAAwB,CACtBA,MAAO,4BACPG,SAAU,WAKdE,OAAO,CACLL,MAAO,QACPM,QAAS,OACTC,UAAW,OACXC,UAAW,OACXC,OAAQ,UACRC,WAAY,OACZP,SAAU,UAEZQ,WAAY,CACVf,OAAQ,OACRgB,aAAc,MACdT,SAAU,OACVU,WAAY,IACZhB,QAAS,iBACTC,WAAY,UACZE,MAAO,OACPS,OAAQ,UACR,uCAAwC,CACtCb,OAAQ,aACRgB,aAAc,MACdT,SAAU,OACVU,WAAY,IACZhB,QAAS,iBACTC,WAAY,UACZE,MAAO,OACPS,OAAQ,WAET,UAAW,CACJK,gBAAiB,UACjBC,UAAW,SAKrBC,KAAK,CACHb,SAAU,OACVc,WAAY,OACZjB,MAAO,sBAGTkB,cAAc,CACZL,WAAY,IACZV,SAAU,OACVc,WAAY,OACZjB,MAAO,4BACPmB,WAAW,QAGbC,MAAM,CACJV,WAAY,OACZG,WAAY,OACZV,SAAU,OACVK,UAAW,OACXS,WAAY,OACZjB,MAAO,SAETqB,MAAO,CACLlB,SAAU,oBACVc,WAAY,kBACZK,MAAO,kBACPtB,MAAO,mBACP,gBAAiB,CACfA,MAAO,oBAET,uBAAwB,CACtBA,MAAO,0B,iCC3Ib,gBAUeuB,IAPG,kBAChB,mCACE,qBAAKC,MAAM,6BAA6BF,MAAM,OAAQG,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAA7F,SACF,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,sC,8IC8GxDC,UA1GG,WAChB,IAAMC,EAAU5C,cACR6C,EAAaC,sBAAbD,SACR,EAA2BE,mBAAS,IAApC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAUC,cACVC,EAAoBC,cACpBC,EAAaC,aAAY,SAACC,GAAD,OAAUA,EAAMC,YAAYC,KAAkBC,SAEvEC,EAAc,SAACC,GACnBA,EAAMC,iBACO,yJACFC,KAAKf,IAIXgB,aAAaC,eAAeP,MAC7BM,aAAaE,WAAWR,KAG1BN,EAAiB,CACfe,KAAM,SACNC,QAAS,CAACC,GAAIX,IAAkBC,MAAOX,KAEzCsB,YAAW,WACT,OAAOpB,EAAQqB,KAAK,eACpB,KAEF1B,EAAS,8BACP,CACE2B,WAAY,UACZC,aAAa,EACbC,mBAAoB,OAnBxBC,QAAQC,IAAI5B,IAyBhB6B,qBAAU,WACR5B,EAASK,KACR,CAACA,IAYJ,OACE,mCACE,qBACEwB,MAAO,CACL7D,QAAS,OACT8D,eAAgB,SAChB7D,UAAW,SACXR,SAAU,WACVsE,KAAM,EACNC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRxE,MAAO,qBACPG,SAAU,OACVL,WAAY,UACZe,WAAY,KAbhB,SAgBE,eAAC,IAAD,CAAW4D,UAAWxC,EAAQzC,KAA9B,UACE,sBACEkF,QA9BW,WAEfnC,EAAQoC,QAAS,EACnBpC,EAAQqB,KAAK,aAEbrB,EAAQqC,UA0BFH,UAAWxC,EAAQ5B,OAFrB,UAIE,cAAC,IAAD,IAJF,IAIgB,mBAAG8D,MAAO,CAACzD,WAAW,QAAtB,uBAEhB,oBAAI+D,UAAWxC,EAAQb,MAAvB,mBACA,eAAC,gBAAD,CAAeqD,UAAWxC,EAAQzC,KAAMqF,SAAU5B,EAAa6B,YAAU,EAACC,aAAa,MAASC,QAAS,SAAAC,GAAM,OAAIjB,QAAQC,IAAIgB,IAA/H,UACE,cAAC,gBAAD,CACEd,MAAO,CAAE3D,UAAW,QACpB0E,WAAY,CACVT,UAAWxC,EAAQZ,OAErB2B,MAAOX,EACP8C,SAAU,SAACjC,GAAD,OAAWZ,EAASY,EAAMkC,OAAOpC,QAC3CU,GAAG,qBACH2B,MAAM,QACNC,WAAY,CAAC,WAAY,WACzBC,cAAe,CAAC,yBAA0B,wBAE5C,uBACA,cAAC,IAAD,CACEb,QAASzB,EACTwB,UAAWxC,EAAQtB,WACnB6E,QAAQ,YACRxF,MAAM,UACNwD,KAAK,SALP","file":"static/js/11.4838b11f.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\nconst focusedColor = \"rgba(255, 255, 255, 0.74)\";\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Roboto\",\n    fontStyle: \"normal\",\n    boxSizing: \"border-box\",\n    margin: \"0\",\n    padding: 0,\n    background: '#272727',\n    position: 'relative',\n  \n    \"& label.Mui-focused\": {\n      color: focusedColor\n    },\n  \n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: focusedColor\n    },\n     \"& .MuiInput-underline:before\": {\n      borderBottomColor: focusedColor\n    },\n    \"& .MuiFilledInput-underline:after\": {\n      borderBottomColor: focusedColor\n    },\n   \n    \"& .MuiOutlinedInput-root\": {\n      \"&.Mui-focused fieldset\": {\n        borderColor: focusedColor\n      }\n    },\n    \"&.Mui-focused\": {\n      color: \"rgba(255, 255, 255, 0.74)\"\n    },\n    \"& .MuiFormLabel-root\": {\n      color: \"rgba(255, 255, 255, 0.74)\",\n      fontSize: '1.6rem',\n    },\n  },\nfield: {\n    \"& .MuiInputBase-input\":{\n      color: '#ffff !important',\nfontSize: '1.8rem !important',\n    },\n     \"& label.Mui-focused\": {\n      color: focusedColor\n    },\n  \n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: focusedColor\n    },\n     \"& .MuiInput-underline:before\": {\n      borderBottomColor: focusedColor\n    },\n    \"& .MuiFilledInput-underline:after\": {\n      borderBottomColor: focusedColor\n    },\n   \n    \"& .MuiOutlinedInput-root\": {\n      \"&.Mui-focused fieldset\": {\n        borderColor: focusedColor\n      }\n    },\n    \"&.Mui-focused\": {\n      color: \"rgba(255, 255, 255, 0.74)\"\n    },\n    \"& .MuiFormLabel-root\": {\n      color: \"rgba(255, 255, 255, 0.74)\",\n      fontSize: '1.6rem',\n    },\n\n  },\n\n  return:{\n    color: '#ffff', \n    display: 'flex', \n    textAlign: 'left', \n    marginTop: '15px',\n    cursor: 'pointer',\n    marginLeft: '15px',\n    fontSize: \"1.6rem\",\n  },\n  buttonBlue: {\n    margin: \"30px\",\n    borderRadius: \"4px\",\n    fontSize: \"14px\",\n    fontWeight: 600,\n    padding: \"12px 31px 14px\",\n    background: \"#03DAC5\",\n    color: \"#fff\",\n    cursor: \"pointer\",\n    \"@media screen and (max-width: 800px)\": {\n      margin: \"30px 100px\",\n      borderRadius: \"4px\",\n      fontSize: \"14px\",\n      fontWeight: 600,\n      padding: \"12px 31px 14px\",\n      background: \"#03DAC5\",\n      color: \"#fff\",\n      cursor: \"pointer\",\n    },\n     '&:hover': {\n            backgroundColor: '#03C1AE',\n            boxShadow: 'none',\n          },\n\n  },\n\n  link:{\n    fontSize: '14px',\n    lineHeight: '20px',\n    color: '#00C4B4 !important'\n  },\n\n  proofSubtitle:{\n    fontWeight: 500,\n    fontSize: '14px',\n    lineHeight: '24px',\n    color: 'rgba(255, 255, 255, 0.84)',\n    paddingTop:'10px',\n  },\n\n  title:{\n    marginLeft: '15px',\n    fontWeight: 'bold',\n    fontSize: '2rem',\n    marginTop: '40px',\n    lineHeight: '24px',\n    color: '#ffff',\n  },\n  input: {\n    fontSize: '1.8rem !important',\n    lineHeight: '24px !important',\n    width: '100% !important',\n    color: \"#ffff !important\",\n    \"&.Mui-focused\": {\n      color: \"#ffff !important\"\n    },\n    \"& .MuiFormLabel-root\": {\n      color: \"#ffff !important\" // or black\n    }\n  }\n\n}));\n\n","import React from 'react'\n\n\nconst ArrowLeft = (  ) => (\n  <>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\"  fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n</svg>\n  </>\n)\nexport default ArrowLeft\n","import { useState,useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Container,Button } from \"@material-ui/core\";\nimport { useStyles } from \"./style\";\nimport { useHistory } from 'react-router';\nimport ArrowLeft from \"../../../Assets/svg/ArrowLeft\";\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\nimport { useToasts } from 'react-toast-notifications';\nimport { credential_email } from \"../../../Const\";\n\nconst EditEmail = () => {\n  const classes = useStyles();\n  const { addToast } = useToasts();\n  const [email, setEmail ] = useState('');\n  const history = useHistory();\n  const dispatchUserData  = useDispatch();\n  const emailValue = useSelector((state)=> state.UserReducer[credential_email].value)\n\n  const handleClick = (event) => {\n    event.preventDefault();\n    let filter = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; /* eslint-disable-line */\n    if(!filter.test(email)){\n      console.log(email);\n    } else {\n\n      if(localStorage.hasOwnProperty(credential_email)){\n        localStorage.removeItem(credential_email);\n      }\n\n      dispatchUserData({\n        type: 'update',\n        payload: {id: credential_email, value: email },\n      })\n      setTimeout(()=>{\n        return history.push('/identity')\n      },500)\n\n      addToast('Has been added successfully', \n        { \n          appearance: 'success',\n          autoDismiss: true,\n          autoDismissTimeout: 2000 \n        }\n      );\n    }\n  };\n\n  useEffect(() => {\n    setEmail(emailValue)\n  }, [emailValue])\n\n  const handleReturn = () => {\n\n    if( history.length <=2 ) {\n      history.push('/identity');\n    } else {\n      history.goBack();\n    }\n\n  }\n\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          textAlign: \"center\",\n          position: \"absolute\",\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0,\n          color: \"rgba(0, 0, 0, 0.6)\",\n          fontSize: \"20px\",\n          background: \"#272727\",\n          fontWeight: 500\n        }}\n      >\n        <Container className={classes.root}>\n          <div \n            onClick={ handleReturn }\n            className={classes.return}\n          >\n            <ArrowLeft /> <p style={{marginLeft:'15px'}}>Return</p>          \n          </div>\n          <h1 className={classes.title}>Email</h1>\n          <ValidatorForm className={classes.root} onSubmit={handleClick} noValidate autoComplete=\"off\"    onError={errors => console.log(errors)}>\n            <TextValidator\n              style={{ marginTop: \"20px\" }}\n              InputProps={{\n                className: classes.input\n              }}\n              value={email}\n              onChange={(event) => setEmail(event.target.value)}\n              id=\"standard-secondary\"\n              label=\"Email\"\n              validators={['required', 'isEmail']}\n              errorMessages={['this field is required', 'email is not valid']}\n            />\n            <br/>\n            <Button\n              onClick={handleClick}\n              className={classes.buttonBlue} \n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n            >\n              ADD CLAIM\n            </Button>\n          </ValidatorForm>\n        </Container>\n      </div>\n    </>\n  );\n};\nexport default EditEmail;\n"],"sourceRoot":""}